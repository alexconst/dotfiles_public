! vim:ft=xdefaults
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! xterm and uxterm
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

! Sensible defaults
UXTerm.*.locale:                false
UXTerm.*.utf8:                  true
UXTerm.*.bellIsUrgent:          true
UXTerm.*.metaSendsEscape:       true
UXTerm.*.cursorBlink:           false
UXTerm.*.highlightSelection:    true
UXTerm.*.trimSelection:         true

! Tweaks
!! report TERM variable with 256 colors support
UXTerm.*.termName:              xterm-256color
!! report TERM variable with 16M (24-bit) colors support
!! NOTE: based on tests xterm-256color already seems to enable 16M, with the caveat of the contradiction from `tput colors`; but for accuracy and for vim sake let us go with xterm-direct
!UXTerm.*.termName:              xterm-direct
!! sixel support
UXTerm.*.decTerminalID:         vt382
UXTerm.*.numColorRegisters:     256

! Scrolling
UXTerm.*.scrollKey:             true
UXTerm.*.scrollBar:             true
UXTerm.*.rightScrollBar:        true
UXTerm.*.scrollWithBuffer:      true
UXTerm.*.scrollTtyKeypress:     true
UXTerm.*.scrollTtyOutput:       false
UXTerm.*.saveLines:             2000
UXTerm.*.Scrollbar*width:       10

! Styling
UXTerm.*.faceName:              xft:MesloLGS NF:size=12:antialias=true:style=Regular
UXTerm.*.boldFont:              xft:MesloLGS NF:size=12:antialias=true:style=Bold
!UXTerm.*.faceName:              xft:DejaVu Sans Mono:size=12:antialias=true:style=Regular
!UXTerm.*.boldFont:              xft:DejaVu Sans Mono:size=12:antialias=true:style=Bold
UXTerm.*.boldMode:              false
UXTerm.*.allowBoldFonts:        true
UXTerm.*.internalBorder:        8
UXTerm.*.borderWidth:           0
! Menu Names
UXTerm.*.mainMenu.label:        File
UXTerm.*.vtMenu.label:          Options
UXTerm.*.fontMenu.label:        View


! Shortcuts
!   scroll one line up/down with alt+↑/alt+↓
!   copy/paste to/from clipboards with ctrl+shift+c/ctrl+shift+v
!   decrease/increase font with ctrl+- and ctrl++
! NOTE: for the `translations` resource neither `UXTerm.*.translations` nor `XTerm.*.translations` worked, only `xterm.*.translations` did
!       using `*.*.translations` works too but it upsets vim (vim prints a warning about these actions not found), so we are using `xterm.*.translations` until evidence for the contrary
!       update: it seems using `xterm...` still gets logged as an error in `~/.xsession-errors`
xterm.*.translations: #override \n\
    Alt <KeyPress> Up: scroll-back(1, line) \n\
    Alt <KeyPress> Down: scroll-forw(1, line) \n\
    Ctrl Shift <Key>C: copy-selection(CLIPBOARD) \n\
    Ctrl Shift <Key>V: insert-selection(CLIPBOARD) \n\
    Ctrl <Key> minus: smaller-vt-font() \n\
    Ctrl <Key> plus: larger-vt-font()

! Note: ended up commenting these because they break usability on programs (eg: less, vim), but maybe could change them to ctrl+shift+U/D
!   scroll half page up/down with ctrl+u/ctrl+d
!    Ctrl <Key>U: scroll-back(1, halfpage) \n\
!    Ctrl <Key>D: scroll-forw(1, halfpage) \n\
! Note: commented because I want to use that combo in neovim
!   show past screen (closed or hidden) with ctrl+shift+h
!    Ctrl Shift <Key>H: set-altscreen(toggle) \n\
! Note: I do not see a point in overriding the original ctrl+key codes
!    Ctrl <Key>h: string("\033[1;6H") \n\
!    Ctrl <Key>l: string("\033[1;6L") \n\
! Note: disabled because it breaks vim recognition --  define new CSI code for ctrl+shift+key because otherwise they would be the same as ctrl+key
!    Ctrl Shift <Key>H: string("\033[1;5H") \n\
!    Ctrl Shift <Key>L: string("\033[1;5L") \n\

